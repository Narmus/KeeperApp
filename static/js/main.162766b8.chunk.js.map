{"version":3,"sources":["components/Header.jsx","components/Footer.jsx","components/Note.jsx","components/CreateArea.jsx","components/App.jsx","index.js"],"names":["Header","Footer","year","Date","getFullYear","Note","props","className","title","content","onClick","onDelete","id","CreateArea","onAdd","useState","setContent","changeContent","event","target","name","value","prevValue","onSubmit","preventDefault","onChange","placeholder","rows","App","localStorage","length","setItem","JSON","stringify","localArray","parse","getItem","lists","setLists","deletNote","filter","item","index","useEffect","note","push","map","key","ReactDOM","createRoot","document","getElementById","render"],"mappings":"wKAUeA,MARf,WACE,OACE,gCACE,wCCMSC,MATf,WACE,IAAMC,GAAO,IAAIC,MAAOC,cACxB,OACE,gCACE,+CAAgBF,KCYPG,MAhBf,SAAcC,GAKZ,OACE,yBAAKC,UAAU,QACb,4BAAKD,EAAME,OACX,2BAAIF,EAAMG,SACV,6BACE,4BAAQC,QATd,WACEJ,EAAMK,SAASL,EAAMM,MAQU,Q,cCqCpBC,MA/Cf,SAAoB,GAAY,IAAVC,EAAK,EAALA,MACpB,EAA8BC,mBAAS,CACrCP,MAAO,GACPC,QAAS,KACT,mBAHKA,EAAO,KAAEO,EAAU,KAK1B,SAASC,EAAcC,GACrB,MAAwBA,EAAMC,OAAtBC,EAAI,EAAJA,KAAMC,EAAK,EAALA,MACdL,GAAW,SAACM,GACV,OAAO,2BACFA,GAAS,kBACXF,EAAOC,OAcd,OACE,6BACE,0BAAME,SANV,SAAoBL,GAClBA,EAAMM,mBAMF,2BACEC,SAAUR,EACVG,KAAK,QACLM,YAAY,QACZL,MAAOZ,EAAQD,QAEjB,8BACEiB,SAAUR,EACVG,KAAK,UACLM,YAAY,iBACZC,KAAK,IACLN,MAAOZ,EAAQA,UAEjB,4BAAQC,QAzBd,WACEI,EAAML,GACNO,EAAW,CAAER,MAAO,GAAIC,QAAS,OAuBJ,UCclBmB,MAlDf,WACEC,aAAaC,OAAS,GAAKD,aAAaE,QAAQ,QAASC,KAAKC,UAAU,KAExE,IAAIC,EAAaF,KAAKG,MAAMN,aAAaO,QAAQ,UACjD,EAA0BrB,mBAASmB,GAAW,mBAAvCG,EAAK,KAAEC,EAAQ,KAatB,SAASC,EAAU3B,GAEjB0B,GAAS,SAAChB,GACR,OAAOA,EAAUkB,QAAO,SAACC,EAAMC,GAC7B,OAAOA,IAAU9B,QAKvB,OApBA+B,qBAAU,WACRd,aAAaE,QAAQ,QAASC,KAAKC,UAAUI,MAC5C,CAACA,IAmBF,kBAAC,WAAQ,KACP,kBAAC,EAAM,MAEP,kBAAC,EAAU,CAACvB,MApBhB,SAAiB8B,GACfN,GAAS,SAAChB,GACR,MAAM,GAAN,mBAAWA,GAAS,CAAEsB,OAExBV,EAAWW,KAAKD,MAmBbP,EAAMS,KAAI,SAACF,EAAMF,GAChB,OACE,kBAAC,EAAI,CACHK,IAAKL,EACL9B,GAAI8B,EACJlC,MAAOoC,EAAKpC,MACZC,QAASmC,EAAKnC,QACdE,SAAU4B,OAKhB,kBAAC,EAAM,QChDAS,IAASC,WAAWC,SAASC,eAAe,SAEpDC,OAAO,kBAAC,EAAG,Q","file":"static/js/main.162766b8.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Header() {\n  return (\n    <header>\n      <h1>Keeper</h1>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\n\nfunction Footer() {\n  const year = new Date().getFullYear();\n  return (\n    <footer>\n      <p>Copyright â“’ {year}</p>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from \"react\";\n\nfunction Note(props) {\n  function onClicked() {\n    props.onDelete(props.id);\n  }\n\n  return (\n    <div className=\"note\">\n      <h1>{props.title}</h1>\n      <p>{props.content}</p>\n      <div>\n        <button onClick={onClicked}>x</button>\n      </div>\n    </div>\n  );\n}\n\nexport default Note;\n","import React, { useState } from \"react\";\n\nfunction CreateArea({ onAdd }) {\n  const [content, setContent] = useState({\n    title: \"\",\n    content: \"\",\n  });\n\n  function changeContent(event) {\n    const { name, value } = event.target;\n    setContent((prevValue) => {\n      return {\n        ...prevValue,\n        [name]: value,\n      };\n    });\n  }\n\n  function addItem() {\n    onAdd(content);\n    setContent({ title: \"\", content: \"\" });\n  }\n\n  function formSubmit(event) {\n    event.preventDefault();\n  }\n\n  return (\n    <div>\n      <form onSubmit={formSubmit}>\n        <input\n          onChange={changeContent}\n          name=\"title\"\n          placeholder=\"Title\"\n          value={content.title}\n        />\n        <textarea\n          onChange={changeContent}\n          name=\"content\"\n          placeholder=\"Take a note...\"\n          rows=\"3\"\n          value={content.content}\n        />\n        <button onClick={addItem}>Add</button>\n      </form>\n    </div>\n  );\n}\n\nexport default CreateArea;\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Note from \"./Note\";\nimport CreateArea from \"./CreateArea\";\n// import notes from \"../notes\";\n\nfunction App() {\n  localStorage.length < 1 && localStorage.setItem(\"Notes\", JSON.stringify([]));\n\n  let localArray = JSON.parse(localStorage.getItem(\"Notes\"));\n  const [lists, setLists] = useState(localArray);\n\n  useEffect(() => {\n    localStorage.setItem(\"Notes\", JSON.stringify(lists));\n  }, [lists]);\n\n  function addNote(note) {\n    setLists((prevValue) => {\n      return [...prevValue, note];\n    });\n    localArray.push(note);\n  }\n\n  function deletNote(id) {\n    // console.log(\"triggered \" + id);\n    setLists((prevValue) => {\n      return prevValue.filter((item, index) => {\n        return index !== id;\n      });\n    });\n  }\n\n  return (\n    <Fragment>\n      <Header />\n\n      <CreateArea onAdd={addNote} />\n\n      {/*Created a map function to gather all notes from notes.js array file*/}\n      {lists.map((note, index) => {\n        return (\n          <Note\n            key={index}\n            id={index}\n            title={note.title}\n            content={note.content}\n            onDelete={deletNote}\n          />\n        );\n      })}\n\n      <Footer />\n    </Fragment>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport App from \"./components/App\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\n\nroot.render(<App />);\n\n//CHALLENGE:\n//1. Implement the add note functionality.\n//- Create a constant that keeps track of the title and content.\n//- Pass the new note back to the App.\n//- Add new note to an array.\n//- Take array and render seperate Note components for each item.\n\n//2. Implement the delete note functionality.\n//- Callback from the Note component to trigger a delete function.\n//- Use the filter function to filter out the item that needs deletion.\n//- Pass a id over to the Note component, pass it back to the App when deleting.\n\n//This is the end result you're aiming for:\n//https://pogqj.csb.app/\n"],"sourceRoot":""}