{"version":3,"sources":["components/Header.jsx","components/Footer.jsx","components/Note.jsx","components/CreateArea.jsx","utils/api.js","components/App.jsx","index.js"],"names":["Header","Footer","year","Date","getFullYear","Note","title","content","uniqueID","onDelete","ident","id","className","onClick","CreateArea","onAdd","useState","setContent","changeContent","event","target","name","value","prevValue","onSubmit","preventDefault","onChange","placeholder","rows","basepath","process","getNotes","Axios","get","then","res","console","log","data","catch","err","message","notesReceived","postNotes","post","notesSender","deleteNotes","noteID","delete","i","App","lists","setLists","setNotes","notesObject","deletNote","filter","item","index","useEffect","note","map","_id","key","dotenv","config","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.ec4346bc.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Header() {\n  return (\n    <header>\n      <h1>Keeper</h1>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\n\nfunction Footer() {\n  const year = new Date().getFullYear();\n  return (\n    <footer>\n      <p>Copyright â“’ {year}</p>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from \"react\";\n\nfunction Note({ title, content, uniqueID, onDelete, ident }) {\n  function onClicked() {\n    onDelete(ident, uniqueID);\n  }\n\n  return (\n    <div id={uniqueID} className=\"note\">\n      <h1>{title}</h1>\n      <p>{content}</p>\n      <div>\n        <button onClick={onClicked}>x</button>\n      </div>\n    </div>\n  );\n}\n\nexport default Note;\n","import React, { useState } from \"react\";\n\nfunction CreateArea({ onAdd }) {\n  const [content, setContent] = useState({\n    title: \"\",\n    content: \"\",\n  });\n\n  function changeContent(event) {\n    const { name, value } = event.target;\n    setContent((prevValue) => {\n      return {\n        ...prevValue,\n        [name]: value,\n      };\n    });\n  }\n\n  // function addItem() {\n  //   onAdd(content);\n  //   setContent({ title: \"\", content: \"\" });\n  // }\n\n  function formSubmit(event) {\n    event.preventDefault();\n  }\n\n  const addItem = () => {\n    onAdd(content);\n    setContent({ title: \"\", content: \"\" });\n  };\n\n  return (\n    <div>\n      <form onSubmit={formSubmit}>\n        <input\n          onChange={changeContent}\n          name=\"title\"\n          placeholder=\"Title\"\n          value={content.title}\n        />\n        <textarea\n          onChange={changeContent}\n          name=\"content\"\n          placeholder=\"Take a note...\"\n          rows=\"3\"\n          value={content.content}\n        />\n        <button onClick={addItem}>Add</button>\n      </form>\n    </div>\n  );\n}\n\nexport default CreateArea;\n","import Axios from \"axios\";\r\n\r\nconst basepath = process.env.REACT_APP_API_BASE_PATH;\r\n\r\n///Collecting Notes Data from Backend\r\n\r\nexport const getNotes = async () => {\r\n  const notesReceived = await Axios.get(basepath + \"/notesget\")\r\n    .then((res) => {\r\n      console.log(\"Success in API/GetNotes/notesData\");\r\n      return res.data;\r\n    })\r\n    .catch((err) => {\r\n      console.log(\"Error\", err.message);\r\n    });\r\n  return notesReceived;\r\n};\r\n\r\n///Sending Notes to Backend\r\n\r\nexport const postNotes = async (title, content) => {\r\n  const notesSender = await Axios.post(basepath + \"/notesdelete\", {\r\n    title: title,\r\n    content: content,\r\n  });\r\n  return notesSender();\r\n};\r\n\r\n///Deleting Notes from Database\r\n\r\nexport const deleteNotes = async (noteID) => {\r\n  const deleteNotes = await Axios.delete(basepath + \"/notesdelete/\" + noteID)\r\n    .then((res) => console.log(\"Delete Note\", res))\r\n    .catch((err) => console.log(\"Delete catch error\", err));\r\n};\r\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Note from \"./Note\";\nimport CreateArea from \"./CreateArea\";\nimport { getNotes, postNotes, deleteNotes } from \"../utils/api\";\n\nfunction App() {\n  // localStorage.length < 1 && localStorage.setItem(\"Notes\", JSON.stringify([]));\n\n  // let localArray = JSON.parse(localStorage.getItem(\"Notes\"));\n  const [lists, setLists] = useState([]);\n\n  // useEffect(() => {\n  //   localStorage.setItem(\"Notes\", JSON.stringify(lists));\n  // }, [lists]);\n\n  // const setNotes = async () => {\n  //   const notesObject = await getNotes();\n  //   console.log(\"setnotes\", notesObject);\n  //   setLists(notesObject.notes);\n  // };\n\n  const setNotes = async () => {\n    const notesObject = await getNotes();\n    setLists(notesObject);\n  };\n\n  useEffect(() => {\n    setNotes();\n  }, []);\n\n  function addNote(note) {\n    setLists((prevValue) => {\n      return [...prevValue, note];\n    });\n    postNotes(note.title, note.content);\n  }\n\n  function deletNote(ident, uniqueID) {\n    // console.log(\"triggered \" + id);\n    setLists((prevValue) => {\n      return prevValue.filter((item, index) => {\n        return index !== ident;\n      });\n    });\n    deleteNotes(uniqueID);\n  }\n\n  return (\n    <Fragment>\n      <Header />\n\n      <CreateArea onAdd={addNote} />\n\n      {/*Created a map function to gather all notes from notes.js array file*/}\n      {lists.map((note, index) => {\n        return (\n          <Note\n            uniqueID={note._id}\n            key={index}\n            ident={index}\n            title={note.title}\n            content={note.content}\n            onDelete={deletNote}\n          />\n        );\n      })}\n\n      <Footer />\n    </Fragment>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport App from \"./components/App\";\nimport dotenv from \"dotenv\";\ndotenv.config();\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\n\nroot.render(<App />);\n\n//CHALLENGE:\n//1. Implement the add note functionality.\n//- Create a constant that keeps track of the title and content.\n//- Pass the new note back to the App.\n//- Add new note to an array.\n//- Take array and render seperate Note components for each item.\n\n//2. Implement the delete note functionality.\n//- Callback from the Note component to trigger a delete function.\n//- Use the filter function to filter out the item that needs deletion.\n//- Pass a id over to the Note component, pass it back to the App when deleting.\n\n//This is the end result you're aiming for:\n//https://pogqj.csb.app/\n"],"sourceRoot":""}